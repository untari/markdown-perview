{"version":3,"sources":["components/Editor.js","components/Preview.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","onChange","markdownValue","id","value","Preview","renderer","marked","Renderer","link","href","title","text","setOptions","breaks","dangerouslySetInnerHTML","__html","Card","children","className","initialMd","App","state","handleChange","e","setState","target","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAMeA,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OACX,0BAAUC,GAAG,SAASC,MAAOF,EAAeD,SAAUA,K,gBCmB3CI,EAnBC,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,cACXI,EAAW,IAAIC,IAAOC,SAS5B,OARAF,EAASG,KAAO,SAASC,EAAMC,EAAOC,GACpC,MAAM,2BAAN,OAAkCF,EAAlC,YAA0CE,EAA1C,SAGFL,IAAOM,WAAW,CAChBC,QAAQ,IAIR,qBACEX,GAAG,UACHY,wBAAyB,CAAEC,OAAQT,IAAOL,EAAe,CAAEI,iBCAlDW,EAdF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUP,EAAb,EAAaA,MAAb,OACX,sBAAKQ,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,oBAAhB,SAAqCR,IACrC,sBAAKQ,UAAU,sBAAf,UACE,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,aAChB,sBAAMA,UAAU,mBAGpB,qBAAKA,UAAU,eAAf,SAA+BD,QCN7BE,G,MAAS,gnBAuDAC,E,4MA7BbC,MAAQ,CAAEpB,cAAekB,G,EACzBG,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZvB,cAAesB,EAAEE,OAAOtB,S,4CAG5B,WAAU,IACDF,EAAiByB,KAAKL,MAAtBpB,cACP,OACE,sBAAKiB,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,4CAGA,iCACE,cAAC,EAAD,CAAMR,MAAM,SAAZ,SACE,cAAC,EAAD,CACEV,SAAU0B,KAAKJ,aACfrB,cAAeA,MAGnB,cAAC,EAAD,CAAMS,MAAM,UAAZ,SACE,cAAC,EAAD,CAAST,cAAeA,gB,GAtBlB0B,aCnBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.92b1ee91.chunk.js","sourcesContent":["import React from 'react';\n\nconst Editor = ({ onChange, markdownValue }) => (\n    <textarea id=\"editor\" value={markdownValue} onChange={onChange} />\n  );\n  \nexport default Editor;","import React from 'react';\nimport marked from 'marked';\n\nconst Preview = ({ markdownValue }) => {\n  const renderer = new marked.Renderer();\n  renderer.link = function(href, title, text) {\n    return `<a target=\"_blank\" href=${href}>${text}</a>`;\n  };\n\n  marked.setOptions({\n    breaks: true\n  });\n\n  return (\n    <div\n      id=\"preview\"\n      dangerouslySetInnerHTML={{ __html: marked(markdownValue, { renderer }) }}\n    />\n  );\n};\n\n\nexport default Preview;","import React from 'react';\n\nconst Card = ({ children, title }) => (\n  <div className=\"Card\">\n    <div className=\"Card-header\">\n      <span className=\"Card-header-title\">{title}</span>\n      <div className=\"Card-header-circles\">\n        <span className=\"circle-1\" />\n        <span className=\"circle-2\" />\n        <span className=\"circle-3\" />\n      </div>\n    </div>\n    <div className=\"Card-content\">{children}</div>\n  </div>\n);\n\nexport default Card;","import React, {Component} from 'react';\nimport Editor from './components/Editor';\nimport Preview from './components/Preview';\nimport Card from './components/Card';\nimport './App.css';\n\nconst initialMd = `# Greetings Earthlings! \n## Welcome to my markdown previewer\n[freeCodeCamp](https://www.freecodecamp.org/)\nFront End Libraries Projects\n- Random Quote Machine\n- Markdown Previewer\n- Drum Machine\n- Javascript Calculator\n- Pomodoro Clock\nthis is a **bold** text, an _emphasis_ , a _**combined emphasis**_ , and a ~~strikethrough~~\nHead 1 | Head 2 | Head 3\n------ |--------| ------\nitem1 | item2 | item3\nitem4 | item5 | item6\nitem7 | item8 | item9\n> example of blockquote\nInline \\`code\\`\n\\`\\`\\`\n// code block\nfunction sum (x, y) {\n  return x + y;\n}\n\\`\\`\\`\n![Random Animals](https://loremflickr.com/320/240)\n`;\nclass App extends Component {\n  state = { markdownValue: initialMd};\n  handleChange = e => {\n    this.setState({\n      markdownValue: e.target.value\n    });\n  };\n  render() {\n    const {markdownValue} = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"App-title\">\n          &mdash;Markdown Previewer&mdash;\n        </div>\n        <main>\n          <Card title=\"Editor\">\n            <Editor \n              onChange={this.handleChange}\n              markdownValue={markdownValue}\n            />\n          </Card>\n          <Card title=\"Preview\">\n            <Preview markdownValue={markdownValue} />\n          </Card>\n        </main>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}